version: '3.8'

# Explicit project name to avoid conflicts with other docker-compose applications
name: log-simulator

services:
  # Log Simulator
  log-simulator:
    build: .
    container_name: autonomous-log-simulator
    environment:
      - NODE_ENV=production
      - KAFKA_BROKER=kafka:29092
      - REDIS_HOST=redis
    volumes:
      - ./logs:/usr/src/app/logs
      - ./data:/usr/src/app/data
    ports:
      - "4000:4000"  # REST API
      - "9090:9090"  # WebSocket
    depends_on:
      - kafka
      - redis
    restart: unless-stopped
    networks:
      - log-network

  # Redis (for Redis Streams)
  redis:
    image: redis:7-alpine
    container_name: log-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - log-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: log-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    networks:
      - log-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: log-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://139.99.236.174:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    restart: unless-stopped
    networks:
      - log-network

networks:
  log-network:
    driver: bridge

volumes:
  redis-data:
